from typing import List

import discord
from anthropic import AsyncAnthropic

from constants import LLMModel, DEFAULT_MAX_TOKENS
from llm.base_llm import LLM


class Anthropic(LLM):
    """A class to encapsulate Anthropic API related functionalities."""

    def __init__(self, api_key):
        super().__init__()
        self.client = AsyncAnthropic(api_key=api_key)

    async def communicate(self, history: List[discord.Message],
                          model: LLMModel,
                          temperature: float,
                          top_p: float,
                          system_message: str) -> str:
        """
        Communicates with a language model using a Discord thread using.

        Args:
            history (List[discord.Message]): The Discord message history to use for the communication.
            model (LLMModel): The language model to use for generating responses.
            temperature (float): Controls the randomness of the responses. Higher values result in more randomness.
            top_p (float): Top-p nucleus sampling parameter.
            system_message (str): The system message to include in the communication.

        Returns:
            str: The response generated by the language model.
        """
        messages = await self.collect_payload(history, model, system_message)
        messages.pop(0)  # Remove system entry (Anthropic takes it as a separate field)
        response = await self.client.messages.create(
            model=model.version,
            max_tokens=DEFAULT_MAX_TOKENS,
            temperature=temperature,
            top_p=top_p,
            system=system_message,
            messages=messages
        )
        return response.content[0].text

    async def _calculate_tokens(self, content: list[dict[str, str]], model: LLMModel) -> int:
        """
        Calculates the number of tokens required to process a message.
        Args:
            content (list[dict[str, str]]): the content to process.
        Returns:
            num_tokens (int): the number of tokens required to process the content.
        """
        # TODO: Implement token calculation for Anthropic API
        return 0
